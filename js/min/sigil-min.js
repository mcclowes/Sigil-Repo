$(function(){function shuffle(e){for(var r,t,a=e.length;a;r=Math.floor(Math.random()*a),t=e[--a],e[a]=e[r],e[r]=t);return e}function Card(){this.cardName="",this.cardEffects=[],this.cardImage="",this.cardBody="",this.playCard=function(targetCard,playerNo,board){window.console.log($(this));for(var deal=new RegExp("deal","i"),destroy=new RegExp("destroy","i"),draw=new RegExp("draw","i"),one=new RegExp("a|1","i"),targetSelf=new RegExp("your","i"),i=0;i<this.cardEffects.length;i++){window.console.log(this.cardName+" -> "+this.cardEffects[i]);var effect=this.cardEffects[i].split(" ");if(window.console.log(effect),effect[0]&&effect[0].match(deal))effect[1]&&effect[1].match(one)&&(effect[4]&&effect[4].match(targetSelf)&&window.console.log("Target self"),window.console.log("Doing a DAMAGE effect!"),$(".box.flipper.opened.flip").click(function(){window.console.log("WOOOOO!!!!!!!!!!!!!"),$(".box.flipper.opened.flip").unbind(),$(this).removeClass("opened"),$(this).removeClass("opened-p1"),$(this).removeClass("opened-p2");var e=$(this).children()[0];board.results[e.getAttribute("col")][e.getAttribute("row")]=0,$(".box.flipper:not(.opened)").click(function(){var e=$(this).children().attr("col"),r=$(this).children().attr("row");board.playGame(r,e)})}),window.console.log($(".box.flipper.opened.flip")));else if(effect[0]&&effect[0].match(destroy))effect[1]&&effect[1].match(one);else if(effect[0]&&effect[0].match(draw))if(effect[1]&&effect[1].match(one))eval("player"+playerNo).drawCard();else for(var i=0;i<effect[1];i++)eval("player"+playerNo).drawCard()}window.console.log(">> deleting "+this),window.console.log(this),this.cardBody.remove(),delete this},this.createCard=function(e){this.cardBody=jQuery("<div/>",{"class":"card drawn "+this.cardName.toLowerCase()}),jQuery("<div/>",{"class":"cardName",text:this.cardName}).appendTo(this.cardBody),jQuery("<div/>",{"class":"cardEffects",text:this.cardEffects.join()}).appendTo(this.cardBody);var r=this;$(this.cardBody[0]).click(function(){r.playCard(r,e,b)}),$(".p"+e+"-hand:first").append(this.cardBody)}}function Piece(){this.row=-1,this.col=-1,this.shieled=!1}function Player(number){this.playerNo=number,this.deck=[],this.hand=[],this.active=[],this.discard=[],this.pieces=[],this.createDeck=function(){for(var tempDeck=JSON.parse(eval("deck_p"+this.playerNo)),i=0;i<tempDeck.length;i++){var newCard=new Card;newCard.cardName=tempDeck[i];for(var j=0;j<cards.length;j++)cards[j].name===newCard.cardName&&(newCard.cardEffects=cards[j].effects);this.deck.push(newCard)}this.deck=shuffle(this.deck)},this.drawCard=function(){this.deck.length>0&&(this.deck[0].createCard(this.playerNo),this.hand.push(this.deck[0]),this.deck.splice(0,1),$(".hand").append())}}function Board(){this.results=[],this.currentPlayer=0,this.initiateBoard=function(){for(var e=0;4>e;e++){this.results[e]=[];for(var r=0;4>r;r++){var t=4*e+r+1;this.results[e][r]=0;var a=$("div").find("[id="+t+"]");a.attr("col",r),a.attr("row",e)}}this.currentPlayer=1},this.endTurn=function(){if(1===this.currentPlayer){this.currentPlayer=-1,$(".wrapper").removeClass("p1-turn"),$(".wrapper").addClass("p2-turn");for(var e=0;e<player1.hand.length;e++)player1.hand[e].cardBody.addClass("hidden");for(var e=0;e<player2.hand.length;e++)player2.hand[e].cardBody.removeClass("hidden")}else{this.currentPlayer=1,$(".wrapper").removeClass("p2-turn"),$(".wrapper").addClass("p1-turn");for(var e=0;e<player2.hand.length;e++)player2.hand[e].cardBody.addClass("hidden");for(var e=0;e<player1.hand.length;e++)player1.hand[e].cardBody.removeClass("hidden")}},this.updateCell=function(e,r){if(0!==this.results[e][r])window.alert("The cell is occupied!");else{var t=new Piece;t.row=e,t.col=r,t.square=$("div").find("[row="+e+"][col="+r+"]"),this.results[e][r]=this.currentPlayer,t.square.parent().addClass("opened flip"),$(t.square.parent()).unbind(),1===this.currentPlayer?(t.square.parent().addClass("opened-p1"),$(player1.pieces).append(t)):(t.square.parent().addClass("opened-p2"),$(player2.pieces).append(t),window.console.log(player2.pieces)),this.endTurn()}},this.drawMark=function(e){return 1===e?"X":"O"},this.turnsLeft=function(){for(var e=16,r=0;4>r;r++)for(var t=0;4>t;t++)0!==this.results[r][t]&&(e-=1);return e},this.playGame=function(e,r){void 0===this.determineWinner()&&this.updateCell(e,r),this.gameOver()},this.gameOver=function(){var e=this;void 0!==this.determineWinner()&&setTimeout(function(){window.alert("The winner is "+e.drawMark(e.determineWinner()))},100),0===this.turnsLeft()&&window.alert("Sorry, no more turns!")},this.determineWinner=function(){return void 0!==this.checkRows()?this.checkRows():void 0!==this.checkCols()?this.checkCols():void 0!==this.checkDiagonals()?this.checkDiagonals():void 0},this.checkRows=function(){for(var e=0;4>e;e++){var r=this.results[e][0]+this.results[e][1]+this.results[e][2]+this.results[e][3];if(4===r||-4===r)return this.results[e][0]}},this.checkCols=function(){for(var e=0;4>e;e++){var r=this.results[0][e]+this.results[1][e]+this.results[2][e]+this.results[3][e];if(4===r||-4===r)return this.results[0][e]}},this.checkDiagonals=function(){var e=this.results[0][0]+this.results[1][1]+this.results[2][2]+this.results[3][3];return 4===e||-4===e?this.results[1][1]:(e=this.results[0][3]+this.results[1][2]+this.results[2][1]+this.results[3][0],4===e||-4===e?this.results[1][1]:void 0)}}var startHandSize=3,maxHandSize=10,b=new Board;b.initiateBoard();var player1=new Player(1),player2=new Player(2);player1.createDeck(),player2.createDeck();for(var i=0;startHandSize>i;i++)player1.drawCard();for(var i=0;startHandSize>i;i++)player2.drawCard();$(".box").click(function(){var e=$(this).children().attr("col"),r=$(this).children().attr("row");b.playGame(r,e)}),$("#button_wrapper").click(function(){location.reload()})});