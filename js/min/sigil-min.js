$(function(){function update_variable_display(){$("#cards_to_play").text(cards_to_play),$("#damagingA").text(damagingA),$("#damagingE").text(damagingE),$("#damagingS").text(damagingS),$("#destroyingA").text(destroyingA),$("#destroyingE").text(destroyingE),$("#destroyingS").text(destroyingS),$("#discarding").text(discarding),$("#shielding").text(shielding),$("#deshielding").text(deshielding),$("#freezing").text(freezing),$("#thawing").text(thawing),$("#blocking").text(blocking)}function update_grid_display(){for(var e=0;4>e;e++)for(var s=0;4>s;s++)$("#grid_box_"+e+"_"+s).text(global_board.results[e][s])}function shuffle(e){for(var s,i,a=e.length;a;s=Math.floor(Math.random()*a),i=e[--a],e[a]=e[s],e[s]=i);return e}function Card(){this.cardName="",this.cardEffects=[],this.cardImage="",this.cardBody="",this.checkPlayable=function(){return window.console.log("Check card is playable"),!0},this.playCard=function(targetCard,playerNo,board){if(window.console.log($(this)),discarding>0){var discardingSelf=this;discarding-=1,update_variable_display(),update_grid_display(),this.cardBody.remove(),delete this}else if(cards_to_play>0&&this.checkPlayable()===!0){$(this.cardBody).fadeOut(300);var conditionIf,deal,destroy,draw,one,every,endTurn,targetSelf,targetEnemy,freeze,thaw,shield,block,discard,hand;conditionIf=new RegExp("^if$","i"),deal=new RegExp("^deal$|^damage$","i"),destroy=new RegExp("^destroy$|^remove$","i"),draw=new RegExp("^draw$|^draws$","i"),one=new RegExp("^a$|^1$","i"),every=new RegExp("^all$|^every$","i"),endTurn=new RegExp("^end$","i"),targetSelf=new RegExp("^your$|^yours$","i"),targetEnemy=new RegExp("^enemy$|^opponent$","i"),freeze=new RegExp("^freeze$","i"),thaw=new RegExp("^thaw$","i"),shield=new RegExp("^shield$|^shields$","i"),block=new RegExp("^block$","i"),discard=new RegExp("^discard$","i"),hand=new RegExp("^hand$|^hands$","i");for(var i=0;i<this.cardEffects.length;i++){window.console.log(this.cardName+" -> "+this.cardEffects[i]);var effect=this.cardEffects[i].split(" ");if(effect[0]&&effect[0].match(endTurn))window.console.log("End turn"),global_board.endTurn();else if(effect[0]&&effect[0].match(deal))if(effect[1]&&effect[1].match(one))effect[4]&&effect[4].match(targetSelf)?(window.console.log("Target self"),damagingS=1):effect[4]&&effect[4].match(targetEnemy)?(window.console.log("Target enemy"),damagingE=1):damagingA=1;else if(effect[1]&&effect[1].match(every)){window.console.log("Damaging all!");for(var k=0;4>k;k++)for(var l=0;4>l;l++)if(1===board.shields[k][l]){board.shields[k][l]=0;var target=$('div[x="'+k+'"][y="'+l+'"]:first');$(target).removeClass("shielded")}else if(0!==board.results[k][l]){var target=$('div[x="'+k+'"][y="'+l+'"]:first');$(target).removeClass("flip"),$(target).removeClass("opened"),$(target).removeClass("opened-p1"),$(target).removeClass("opened-p2"),board.results[k][l]=0}}else effect[4]&&effect[4].match(targetSelf)?(window.console.log("Target self"),damagingS=effect[1]):effect[4]&&effect[4].match(targetEnemy)?(window.console.log("Target enemy"),damagingE=effect[1]):damagingA=effect[1];else if(effect[0]&&effect[0].match(destroy))if(effect[2]&&effect[2].match(shield))if(effect[1]&&effect[1].match(one))window.console.log("deshield 1"),deshielding=1;else if(effect[1]&&effect[1].match(every)){window.console.log("Unshielding all!");for(var k=0;4>k;k++)for(var l=0;4>l;l++)board.shields[k][l]=0}else window.console.log("deshield lots"),deshielding=effect[1];else if(effect[1]&&effect[1].match(one))effect[4]&&effect[4].match(targetSelf)?(window.console.log("Target self"),destroyingS=1):effect[4]&&effect[4].match(targetEnemy)?(window.console.log("Target enemy"),destroyingE=1):(window.console.log("Destroying one piece"),destroyingA=1);else if(effect[1]&&effect[1].match(every)){window.console.log("Destroy all pieces");var pieces=$(".box.flipper");$(pieces).removeClass("flip"),$(pieces).removeClass("opened"),$(pieces).removeClass("opened-p1"),$(pieces).removeClass("opened-p2"),$(pieces).removeClass("shielded");for(var k=0;4>k;k++)for(var l=0;4>l;l++)board.results[k][l]=0,board.shields[k][l]=0}else effect[4]&&effect[4].match(targetSelf)?(window.console.log("Target self"),destroyingS=effect[1]):effect[4]&&effect[4].match(targetEnemy)?(window.console.log("Target enemy"),destroyingE=effect[1]):destroyingA=effect[1];else if(effect[0]&&effect[0].match(draw))if(effect[1]&&effect[1].match(one))eval("player"+playerNo).hand.length<maxHandSize&&eval("player"+playerNo).drawCard();else for(var i=0;i<effect[1];i++)eval("player"+playerNo).hand.length<maxHandSize&&eval("player"+playerNo).drawCard();else if(effect[0]&&effect[0].match(freeze))if(window.console.log(effect[1]),window.console.log(effect[1].match(one)),effect[1]&&effect[1].match(one))window.console.log("Doing a single frost... spoopy!"),freezing=1;else if(effect[1]&&effect[1].match(every)){window.console.log("Freezing all!");for(var i=0;4>i;i++)for(var j=0;4>j;j++)0===board.results[i][j]&&(board.frost[i][j]=4,$('.box.flipper[x="'+i+'"][y="'+j+'"]:first').addClass("frost2"))}else freezing=effect[1];else if(effect[0]&&effect[0].match(thaw))if(effect[1]&&effect[1].match(one))window.console.log("Thawing a square"),thawing=1;else if(effect[1]&&effect[1].match(every)){window.console.log("Thawing all squares");for(var i=0;4>i;i++)for(var j=0;4>j;j++)0===board.results[i][j]&&(board.frost[i][j]=0)}else window.console.log("Thawing some squares"),thawing=effect[1];else if(effect[0]&&effect[0].match(block))if(effect[1]&&effect[1].match(one))window.console.log("Doing a single block"),blocking=1;else if(effect[1]&&effect[1].match(every)){window.console.log("Blocking all!");for(var i=0;4>i;i++)for(var j=0;4>j;j++)0===board.results[i][j]&&(board.rock[i][j]=6,$('.box.flipper[x="'+i+'"][y="'+j+'"]:first').addClass("rock3"))}else freezing=effect[1];else if(effect[0]&&effect[0].match(shield))if(effect[1]&&effect[1].match(one))window.console.log("Doing a shield"),shielding=1;else if(effect[1]&&effect[1].match(every)){window.console.log("Shielding all!");for(var i=0;4>i;i++)for(var j=0;4>j;j++)0===board.results[i][j]&&(board.shields[i][j]=1)}else window.console.log("Shielding many!"),shielding=effect[1];else if(effect[0]&&effect[0].match(discard))if(window.console.log("Discarding"),effect[1]&&effect[1].match(one))discarding=1;else if(effect[1]&&effect[1].match(every))for(var i=0;i<player1.hand.length();i++)this.cardBody.remove(),delete this;else discarding=effect[1];else if(effect[0]&&effect[0].match(targetSelf)){if(effect[1]&&effect[1].match(targetEnemy)&&effect[2]&&effect[2].match(draw)){window.console.log("Your enemy draws cards");var playerEnemy=1;if(1===playerNo&&(playerEnemy=2),effect[1]&&effect[1].match(one))eval("player"+playerEnemy).hand.length<maxHandSize&&eval("player"+playerEnemy).drawCard();else for(var k=0;k<effect[3];k++)eval("player"+playerEnemy).hand.length<maxHandSize&&eval("player"+playerEnemy).drawCard()}}else effect[0]&&effect[0].match(conditionIf)&&(window.console.log("Doign an if"),effect[1]&&effect[1].match(targetSelf)&&effect[3]&&effect[3].match(conditionLeast)&&(effect[3]&&effect[3].match(piece)||effect[3]&&effect[3].match(shield)));cards_to_play-=1,update_variable_display(),update_grid_display()}this.cardBody.remove(),delete this}else window.alert("No more cards can be played this turn")},this.createCard=function(e){this.cardBody=jQuery("<div/>",{"class":"card drawn "+this.cardName.toLowerCase().split(" ").join("_")}),jQuery("<div/>",{"class":"cardName",text:this.cardName}).appendTo(this.cardBody),jQuery("<div/>",{"class":"cardEffects",text:this.cardEffects.join([separator=". "])+"."}).appendTo(this.cardBody);var s=this;$(this.cardBody[0]).click(function(){s.playCard(s,e,b)}),$(".p"+e+"-hand:first").append(this.cardBody)}}function Piece(){this.row=-1,this.col=-1}function Player(number){this.playerNo=number,this.deck=[],this.hand=[],this.active=[],this.discard=[],this.pieces=[],this.createDeck=function(){for(var tempDeck=JSON.parse(eval("deck_p"+this.playerNo)),i=0;i<tempDeck.length;i++){var newCard=new Card;newCard.cardName=tempDeck[i];for(var j=0;j<cards.length;j++)cards[j].name===newCard.cardName&&(newCard.cardEffects=cards[j].effects);this.deck.push(newCard)}this.deck=shuffle(this.deck)},this.drawCard=function(){this.deck.length>0&&this.hand.length<maxHandSize?(this.deck[0].createCard(this.playerNo),this.hand.push(this.deck[0]),this.deck.splice(0,1),global_board.currentPlayer===this.playerNo||-1===global_board.currentPlayer&&2===this.playerNo?window.console.log("Own turn"):$(this.hand[this.hand.length-1].cardBody).addClass("hidden"),$(".hand").append()):window.console.log("Hand full - "+this.deck.length+", "+this.hand.length)}}function Board(){this.results=[],this.frost=[],this.rock=[],this.shields=[],this.currentPlayer=0,this.initiateBoard=function(){for(var e=0;4>e;e++){this.results[e]=[],this.frost[e]=[],this.rock[e]=[],this.shields[e]=[];for(var s=0;4>s;s++){var i=4*e+s+1;this.results[e][s]=0,this.frost[e][s]=0,this.rock[e][s]=0,this.shields[e][s]=0}}this.currentPlayer=1},this.endTurn=function(){if(1===this.currentPlayer){this.currentPlayer=-1,$(".wrapper").removeClass("p1-turn"),$(".wrapper").addClass("p2-turn");for(var e=0;e<player1.hand.length;e++)player1.hand[e].cardBody.addClass("hidden");for(var e=0;e<player2.hand.length;e++)player2.hand[e].cardBody.removeClass("hidden");player2.drawCard()}else{this.currentPlayer=1,$(".wrapper").removeClass("p2-turn"),$(".wrapper").addClass("p1-turn");for(var e=0;e<player2.hand.length;e++)player2.hand[e].cardBody.addClass("hidden");for(var e=0;e<player1.hand.length;e++)player1.hand[e].cardBody.removeClass("hidden");player1.drawCard()}for(var e=0;4>e;e++)for(var s=0;4>s;s++){var i=$('div[x="'+e+'"][y="'+s+'"]:first');1===this.frost[e][s]?i.removeClass("frost1"):3===this.frost[e][s]&&(i.removeClass("frost2"),i.addClass("frost1")),this.frost[e][s]>0?this.frost[e][s]=this.frost[e][s]-1:this.frost[e][s]=0,1===this.rock[e][s]?i.removeClass("rock1"):3===this.rock[e][s]?(i.removeClass("rock2"),i.addClass("rock1")):5===this.rock[e][s]&&(i.removeClass("rock3"),i.addClass("rock2")),this.rock[e][s]>0?this.rock[e][s]=this.rock[e][s]-1:this.rock[e][s]=0}cards_to_play=1,damagingA=0,damagingE=0,damagingS=0,destroyingA=0,destroyingE=0,destroyingS=0,discarding=0,shielding=0,deshielding=0,freezing=0,thawing=0,blocking=0,update_variable_display()},this.updateCell=function(e,s){if(window.console.log("Clicked on "+this+"/"+$(this)),0!==this.results[e][s]||this.frost[e][s]>=1||this.rock[e][s]>=1){if(window.console.log("The cell is occupied!"),0!==this.results[e][s]){if(destroyingA>0){window.console.log("Destroying any piece"),this.results[e][s]=0,window.console.log(this.results);var i=$('div[x="'+e+'"][y="'+s+'"]:first');$(i).hasClass("shielded")&&$(i).removeClass("shielded"),$(i).removeClass("flip"),$(i).removeClass("opened"),$(i).removeClass("opened-p1"),$(i).removeClass("opened-p2"),destroyingA-=1}else if(destroyingE>0){if(this.results[e][s]!==this.currentPlayer){window.console.log("Destroying an enemy"),this.results[e][s]=0,window.console.log(this.results);var i=$('div[x="'+e+'"][y="'+s+'"]:first');$(i).hasClass("shielded")&&$(i).removeClass("shielded"),$(i).removeClass("flip"),$(i).removeClass("opened"),$(i).removeClass("opened-p1"),$(i).removeClass("opened-p2"),destroyingE-=1}}else if(destroyingS>0){if(this.results[e][s]===this.currentPlayer){window.console.log("Destroying own piece"),this.results[e][s]=0,window.console.log(this.results);var i=$('div[x="'+e+'"][y="'+s+'"]:first');$(i).hasClass("shielded")&&$(i).removeClass("shielded"),$(i).removeClass("flip"),$(i).removeClass("opened"),$(i).removeClass("opened-p1"),$(i).removeClass("opened-p2"),destroyingS-=1}}else if(damagingA>0){window.console.log("Damaging any");var i=$('div[x="'+e+'"][y="'+s+'"]:first');$(i).hasClass("shielded")?$(i).removeClass("shielded"):(this.results[e][s]=0,$(i).removeClass("flip"),$(i).removeClass("opened"),$(i).removeClass("opened-p1"),$(i).removeClass("opened-p2")),damagingA-=1}else if(damagingE>0){if(this.results[e][s]!==this.currentPlayer){window.console.log("Damaging enemy");var i=$('div[x="'+e+'"][y="'+s+'"]:first');$(i).hasClass("shielded")?$(i).removeClass("shielded"):(this.results[e][s]=0,$(i).removeClass("flip"),$(i).removeClass("opened"),$(i).removeClass("opened-p1"),$(i).removeClass("opened-p2")),damagingE-=1}}else if(damagingS>0){if(this.results[e][s]===this.currentPlayer){window.console.log("Damaging own piece");var i=$('div[x="'+e+'"][y="'+s+'"]:first');$(i).hasClass("shielded")?$(i).removeClass("shielded"):(this.results[e][s]=0,$(i).removeClass("flip"),$(i).removeClass("opened"),$(i).removeClass("opened-p1"),$(i).removeClass("opened-p2")),damagingS-=1}}else if(shielding>0){this.shields[e][s]=1;var i=$('div[x="'+e+'"][y="'+s+'"]:first');i.addClass("shielded"),shielding-=1}else if(deshielding>0){this.shields[e][s]=0;var i=$('div[x="'+e+'"][y="'+s+'"]:first');$(i).removeClass("shielded"),deshielding-=1}}else if(this.frost[e][s]>=1&&thawing>0){window.console.log("Thawing out a square");var i=$('div[x="'+e+'"][y="'+s+'"]:first');this.frost[e][s]=0,$(i).removeClass("frost1"),$(i).removeClass("frost2"),thawing-=1}else if(this.rock[e][s]>=1&&deblocking>0){window.console.log("Deblocking a square");var i=$('div[x="'+e+'"][y="'+s+'"]:first');this.rock[e][s]=0,$(i).removeClass("rock1"),$(i).removeClass("rock2"),$(i).removeClass("rock3"),blocking-=1}}else if(freezing>0){this.frost[e][s]=4;var i=$('div[x="'+e+'"][y="'+s+'"]:first');i.addClass("frost2"),freezing-=1}else if(blocking>0){this.rock[e][s]=6;var i=$('div[x="'+e+'"][y="'+s+'"]:first');i.addClass("rock3"),blocking-=1}else{var a=new Piece;a.row=e,a.col=s,a.square=$("div").find("[x="+e+"][y="+s+"]"),this.results[e][s]=this.currentPlayer,a.square.addClass("opened flip"),1===this.currentPlayer?(a.square.addClass("opened-p1"),$(player1.pieces).append(a)):(a.square.addClass("opened-p2"),$(player2.pieces).append(a)),this.endTurn()}update_variable_display(),update_grid_display()},this.drawMark=function(e){return 1===e?"X":"O"},this.playGame=function(e,s){window.console.log("playing"),void 0===this.determineWinner()&&this.updateCell(e,s),this.gameOver()},this.gameOver=function(){var e=this;void 0!==this.determineWinner()&&setTimeout(function(){window.alert("The winner is "+e.drawMark(e.determineWinner()))},100)},this.determineWinner=function(){return void 0!==this.checkRows()?this.checkRows():void 0!==this.checkCols()?this.checkCols():void 0!==this.checkDiagonals()?this.checkDiagonals():void 0},this.checkRows=function(){for(var e=0;4>e;e++){var s=this.results[e][0]+this.results[e][1]+this.results[e][2]+this.results[e][3];if(4===s||-4===s)return this.results[e][0]}},this.checkCols=function(){for(var e=0;4>e;e++){var s=this.results[0][e]+this.results[1][e]+this.results[2][e]+this.results[3][e];if(4===s||-4===s)return this.results[0][e]}},this.checkDiagonals=function(){var e=this.results[0][0]+this.results[1][1]+this.results[2][2]+this.results[3][3];return 4===e||-4===e?this.results[1][1]:(e=this.results[0][3]+this.results[1][2]+this.results[2][1]+this.results[3][0],4===e||-4===e?this.results[1][1]:void 0)}}var startHandSize,maxHandSize;startHandSize=2,maxHandSize=10;var cards_to_play,damagingA,damagingE,damagingS,destroyingA,destroyingE,destroyingS,discarding,shielding,deshielding,freezing,thawing,blocking;cards_to_play=1,damagingA=0,damagingE=0,damagingS=0,destroyingA=0,destroyingE=0,destroyingS=0,discarding=0,shielding=0,deshielding=0,freezing=0,thawing=0,blocking=0;var global_board,player1,player2,b=new Board;b.initiateBoard(),global_board=b,player1=new Player(1),player2=new Player(2),player1.createDeck(),player2.createDeck(),update_variable_display(),update_grid_display();for(var i=0;startHandSize>i;i++)player1.drawCard();for(var i=0;startHandSize>i;i++)player2.drawCard();for(var i=0;i<player2.hand.length;i++)player2.hand[i].cardBody.addClass("hidden");$(".box").click(function(){var e=this.getAttribute("x"),s=this.getAttribute("y");b.playGame(e,s)}),$("#submitButton").click(function(){location.reload()}),$("#endTurnButton").click(function(){b.endTurn()})});