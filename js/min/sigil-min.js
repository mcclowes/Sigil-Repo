$(function(){function Card(){this.cardName="",this.cardEffects=[],this.cardImage="",this.cardBody="",this.createCard=function(t){this.cardBody=jQuery("<div/>",{"class":"card drawn "+this.cardName.toLowerCase()}),jQuery("<div/>",{"class":"cardName",text:this.cardName}).appendTo(this.cardBody),jQuery("<div/>",{"class":"cardEffects",text:this.cardEffects.join()}).appendTo(this.cardBody),$(".p"+t+"-hand:first").append(this.cardBody)}}function Player(number){this.playerNo=number,this.deck=[],this.hand=[],this.active=[],this.discard=[],this.createDeck=function(){function shuffle(t){for(var e,r,s=t.length;s;e=Math.floor(Math.random()*s),r=t[--s],t[s]=t[e],t[e]=r);return t}var tempDeck=JSON.parse(eval("deck_p"+this.playerNo));window.console.log(tempDeck);for(var i=0;i<tempDeck.length;i++){var newCard=new Card;newCard.cardName=tempDeck[i],this.deck.push(newCard)}this.deck=shuffle(this.deck),window.console.log(this.deck)},this.drawCard=function(){this.deck.length>0&&(this.deck[0].createCard(this.playerNo),window.console.log(this.deck[0]),this.hand.push(this.deck[0]),this.deck.splice(0,1),$(".hand").append())}}function Board(){this.results=[],this.currentPlayer=0,this.initiateBoard=function(){for(var t=0;4>t;t++){this.results[t]=[];for(var e=0;4>e;e++){var r=4*t+e+1;this.results[t][e]=0;var s=$("div").find("[id="+r+"]");s.attr("col",e),s.attr("row",t)}}this.currentPlayer=1},this.endTurn=function(){1===this.currentPlayer?(window.console.log("changin"),this.currentPlayer=-1,$(".wrapper").removeClass("p1-turn"),$(".wrapper").addClass("p2-turn")):(this.currentPlayer=1,$(".wrapper").removeClass("p2-turn"),$(".wrapper").addClass("p1-turn"))},this.updateCell=function(t,e){if(window.console.log("Updating cell"),0!==this.results[t][e])window.alert("The cell is occupied!");else{this.results[t][e]=this.currentPlayer,window.console.log("row: "+t+", "+e);var r=$("div").find("[row="+t+"][col="+e+"]");r.parent().addClass("opened flip"),window.console.log("Real player "+this.currentPlayer),1===this.currentPlayer?r.parent().addClass("opened-p1"):r.parent().addClass("opened-p2"),this.endTurn()}},this.drawMark=function(t){return 1===t?"X":"O"},this.turnsLeft=function(){for(var t=16,e=0;4>e;e++)for(var r=0;4>r;r++)0!==this.results[e][r]&&(t-=1);return t},this.playGame=function(t,e){void 0===this.determineWinner()&&this.updateCell(t,e),this.gameOver()},this.gameOver=function(){var t=this;void 0!==this.determineWinner()&&setTimeout(function(){window.alert("The winner is "+t.drawMark(t.determineWinner()))},100),0===this.turnsLeft()&&window.alert("Sorry, no more turns!")},this.determineWinner=function(){return void 0!==this.checkRows()?this.checkRows():void 0!==this.checkCols()?this.checkCols():void 0!==this.checkDiagonals()?this.checkDiagonals():void 0},this.checkRows=function(){for(var t=0;4>t;t++){var e=this.results[t][0]+this.results[t][1]+this.results[t][2]+this.results[t][3];if(4===e||-4===e)return this.results[t][0]}},this.checkCols=function(){for(var t=0;4>t;t++){var e=this.results[0][t]+this.results[1][t]+this.results[2][t]+this.results[3][t];if(4===e||-4===e)return this.results[0][t]}},this.checkDiagonals=function(){var t=this.results[0][0]+this.results[1][1]+this.results[2][2]+this.results[3][3];return 4===t||-4===t?this.results[1][1]:(t=this.results[0][3]+this.results[1][2]+this.results[2][1]+this.results[3][0],4===t||-4===t?this.results[1][1]:void 0)}}var startHandSize=3,maxHandSize=10,b=new Board;b.initiateBoard();var player1=new Player(1),player2=new Player(2);player1.createDeck(),player2.createDeck();for(var i=0;startHandSize>i;i++)player1.drawCard();for(var i=0;startHandSize>i;i++)player2.drawCard();$(".p1-hand").sortable(),$(".p2-hand").sortable(),$(".box").click(function(){var t=$(this).children().attr("col"),e=$(this).children().attr("row");b.playGame(e,t)}),$("#button_wrapper").click(function(){location.reload()})});